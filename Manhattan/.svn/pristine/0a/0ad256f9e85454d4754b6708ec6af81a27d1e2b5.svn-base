//
//  XHHWillBuyView.m
//  FuturePurse
//
//  Created by Apple on 2018/7/30.
//  Copyright © 2018年 jbtm. All rights reserved.
//

#import "XHHWillBuyView.h"
#import "XHHChoosePayTypeController.h"
#import "XHHPTChooseController.h"
@interface XHHWillBuyView()<UITextFieldDelegate>

@property (nonatomic , assign) BOOL isHaveDian;

@end;

@implementation XHHWillBuyView
-(void)awakeFromNib{
    [super awakeFromNib];
    self.buyNumber.delegate = self;
    self.minSellNumber.delegate = self;
    self.maxSellNumber.delegate = self;
    self.currPrice.delegate = self;
    
    [self.payTypeTextFeild configPlaceholderWithFont:[UIFont systemFontOfSize:16] textColor:[UIColor colorWithHexString:@"4B4B80"]];
    [self.currPrice configPlaceholderWithFont:[UIFont systemFontOfSize:16] textColor:[UIColor colorWithHexString:@"4B4B80"]];
    [self.buyNumber configPlaceholderWithFont:[UIFont systemFontOfSize:16] textColor:[UIColor colorWithHexString:@"4B4B80"]];
    [self.minSellNumber configPlaceholderWithFont:[UIFont systemFontOfSize:16] textColor:[UIColor colorWithHexString:@"4B4B80"]];
    [self.maxSellNumber configPlaceholderWithFont:[UIFont systemFontOfSize:16] textColor:[UIColor colorWithHexString:@"4B4B80"]];
    
    [self.buyNumber addTarget:self action:@selector(vlueChange) forControlEvents:UIControlEventEditingChanged];
    [self.currPrice addTarget:self action:@selector(vlueChange) forControlEvents:UIControlEventEditingChanged];
}
/*
 // Only override drawRect: if you perform custom drawing.
 // An empty implementation adversely affects performance during animation.
 - (void)drawRect:(CGRect)rect {
 // Drawing code
 }
 */
-(void)vlueChange{
    
    if ([self.currPrice.text floatValue] > 0 && [self.buyNumber.text floatValue] > 0) {
        self.willUseMoney.text = [NSString stringWithFormat:@"%.4f",[self.currPrice.text floatValue] * [self.buyNumber.text floatValue]];
    }else{
        self.willUseMoney.text = @"--";
    }
}
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    /*
     * 不能输入.0-9以外的字符。
     * 设置输入框输入的内容格式
     * 只能有一个小数点
     * 小数点后最多能输入两位
     * 如果第一位是.则前面加上0.
     * 如果第一位是0则后面必须输入点，否则不能输入。
     */
    
    // 判断是否有小数点
    if ([textField.text containsString:@"."]) {
        self.isHaveDian = YES;
    }else{
        self.isHaveDian = NO;
    }
    
    if (string.length > 0) {
        
        //当前输入的字符
        unichar single = [string characterAtIndex:0];
        ChZ_DebugLog(@"single = %c",single);
        
        // 不能输入.0-9以外的字符
        if (!((single >= '0' && single <= '9') || single == '.'))
        {
            ChZ_MBError(@"您的输入格式不正确")
            return NO;
        }
        
        // 只能有一个小数点
        if (self.isHaveDian && single == '.') {
            ChZ_MBError(@"最多只能输入一个小数点")
            return NO;
        }
        
        // 如果第一位是.则前面加上0.
        if ((textField.text.length == 0) && (single == '.')) {
            textField.text = @"0";
        }
        
        // 如果第一位是0则后面必须输入点，否则不能输入。
        if ([textField.text hasPrefix:@"0"]) {
            if (textField.text.length > 1) {
                NSString *secondStr = [textField.text substringWithRange:NSMakeRange(1, 1)];
                if (![secondStr isEqualToString:@"."]) {
                    ChZ_MBError(@"第二个字符需要是小数点")
                    return NO;
                }
            }else{
                if (![string isEqualToString:@"."]) {
                    ChZ_MBError(@"第二个字符需要是小数点")
                    return NO;
                }
            }
        }
        //        // 小数点后最多能输入两位
        //        if (self.isHaveDian) {
        //            NSRange ran = [textField.text rangeOfString:@"."];
        //            // 由于range.location是NSUInteger类型的，所以这里不能通过(range.location - ran.location)>2来判断
        //            if (!ChZ_StringIsEmpty(self.model.digit))
        //            {
        //                return YES;
        //            }
        //            NSArray *array = [self.model.digit componentsSeparatedByString:@"#"];
        //            if (array == nil || array.count !=2)
        //            {
        //                return YES;
        //            }
        //            NSString *constraintPriceString = [array firstObject];
        //            NSString *constraintNumberString = [array lastObject];
        //            int constraintPrice = [constraintPriceString intValue];
        //            int constraintNumber = [constraintNumberString intValue];
        //            if (range.location > ran.location) {
        //                if ((self.muchTextFeild == textField || self.priceTextFeild == textField) && [self.priceTextFeild.text pathExtension].length > constraintPrice -1)
        //                {
        //                    NSString *msg = [NSString stringWithFormat:@"委托价格最多有%@位小数",constraintPriceString];
        //                    ChZ_MBError(msg)
        //                    return NO;
        //                }
        //            }
        //        }
    }
    return YES;
}
/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/
- (IBAction)choosePayType:(id)sender {
    
    XHHChoosePayTypeController *vc = [[XHHChoosePayTypeController alloc] init];
    @weakify(self);
    vc.payType = ^(NSArray *payTypes) {
        @strongify(self);
        NSString *pString = @"";
        for(int i = 0;i < payTypes.count;i ++)
        {
            if (i == 0) {
                pString = payTypes[0];
            }else{
                pString = [NSString stringWithFormat:@"%@,%@",pString,payTypes[i]];
            }
        }
        self.payTypeTextFeild.text = pString;
    };
    
    [[ChZUtil getCurrentVC].navigationController pushViewController:vc animated:YES];
}

- (IBAction)chooseCNYType:(id)sender {
    XHHPTChooseController *vc = [[XHHPTChooseController alloc] init];
    @weakify(self);
    vc.chooseCnyBlock = ^(XHHC2CCnyListModel *model)
    {
        @strongify(self);
        self.cnyTypLable.text = model.keywords;
        self.minType.text = model.keywords;
        self.maxType.text = model.keywords;
        self.numType.text = model.keywords;
        self.cnyModel = model;
    };

    vc.cnyList = self.cnyList;
    [[ChZUtil getCurrentVC].navigationController pushViewController:vc animated:YES];
}


- (IBAction)buyAction:(id)sender {
    
    _payBlock();
}


@end
