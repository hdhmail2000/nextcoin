//
//  XHHMovePointView.m
//  Manhattan
//
//  Created by Apple on 2018/8/30.
//  Copyright © 2018年 Apple. All rights reserved.
//

#import "XHHMovePointView.h"
#import "UIView+i7Rotate360.h"
 
@interface XHHMovePointView ()

@property (strong, nonatomic) NSTimer *timer;

@property (nonatomic , strong) UIImageView *imageView;
@property (nonatomic , strong) UIImageView *imageView2;


@property (strong, nonatomic) UIView *lightView1;
@property (strong, nonatomic) UIView *lightView2;

@end


@implementation XHHMovePointView


-(instancetype)initWithFrame:(CGRect)frame{
    self = [super initWithFrame:frame];
    if (self) {
        self.backgroundColor = [UIColor clearColor];
        self.layer.masksToBounds = YES;
        [self zh_setupUI];
        
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(beginRotate) name:@"BEGINSCROLLOW" object:nil];
    }
    return self;
}
-(void)moddleImage:(UIImage *)image{
    self.imageView.image = image;
    
}
-(void)topImage:(UIImage *)image{
    self.imageView2.image = image;
}
-(void)lightColor:(UIColor *)color{
    
    [self.lightView1 setGradientBackgroundWithColors:@[color,[UIColor clearColor]] locations:nil startPoint:CGPointMake(0, 1) endPoint:CGPointMake(0, 0)];

    [self.lightView2 setGradientBackgroundWithColors:@[color,[UIColor clearColor]] locations:nil startPoint:CGPointMake(0, 1) endPoint:CGPointMake(0, 0)];
}
-(void)zh_setupUI{
    
    UIView *bigView = [[UIView alloc] init];
    bigView.alpha = 0.4;
    bigView.frame = CGRectMake(0, 0, self.width, self.height);
    [self addSubview:bigView];
    self.lightView1 = bigView;
    [bigView setGradientBackgroundWithColors:@[[UIColor colorWithHexString:@"1eddfe"],[UIColor colorWithHexString:@"0B1031"]] locations:nil startPoint:CGPointMake(0, 1) endPoint:CGPointMake(0, 0)];
    
   
    CGFloat imagex = self.width > 20 ? 7 : 0;
    
    UIView *bigView1 = [[UIView alloc] init];
    bigView1.alpha = 0.4;
    bigView1.frame = CGRectMake(imagex, 0, self.width-2*imagex, self.height);
    [self addSubview:bigView1];
    self.lightView2 = bigView1;
    [bigView1 setGradientBackgroundWithColors:@[[UIColor colorWithHexString:@"1eddfe"],[UIColor colorWithHexString:@"0B1031"]] locations:nil startPoint:CGPointMake(0, 1) endPoint:CGPointMake(0, 0)];
    
    
    
    UIImageView *imageView = [[UIImageView alloc] init];
    self.imageView = imageView;
    imageView.image = [UIImage imageNamed:@"mining_trad_blueTT"];
    imageView.frame = CGRectMake(imagex, self.height - (self.width-2*imagex), self.width-2*imagex, self.width-2*imagex);
    [self addSubview:imageView];
    [imageView rotate360WithDuration:10 repeatCount:100000 timingMode:i7Rotate360TimingModeLinear];
    
    
    
    UIImageView *imageView2 = [[UIImageView alloc] init];
    self.imageView2 = imageView2;
    imageView2.image = [UIImage imageNamed:@""];
    imageView2.frame = CGRectMake(2*imagex, self.height - 2*(self.width-2*imagex), self.width-2*imagex, self.width-2*imagex);
    [self addSubview:imageView2];
    [imageView2 rotate360WithDuration:10 repeatCount:100000 timingMode:i7Rotate360TimingModeLinear];
    
    [self _loadTimer];
}
-(void)beginRotate{
    [self.imageView rotate360WithDuration:10 repeatCount:100000 timingMode:i7Rotate360TimingModeLinear];
    if (self.imageView2.image)
    {
        [self.imageView2 rotate360WithDuration:10 repeatCount:100000 timingMode:i7Rotate360TimingModeLinear];
    }
    
}
- (void)_refreshData
{
    
    UIView *v = [[UIView alloc] init];
    v.backgroundColor = [UIColor whiteColor];
    CGFloat w = [self getRandomNumber:1 to:4];
    v.frame = CGRectMake([self getRandomNumber:4 to:26], [self getRandomNumber:self.height to:self.height +5], w, w);
    v.layer.cornerRadius = w/2;
    v.layer.masksToBounds = YES;
    
    UIBezierPath *shadowPath = [UIBezierPath bezierPathWithRect:v.bounds];
    v.layer.shadowColor = [UIColor blackColor].CGColor;
    // 阴影偏移量
    v.layer.shadowOffset = CGSizeMake(2.0f, 2.0f);
    // 阴影的透明度
    v.layer.shadowOpacity = 0.8f;
    // 设置阴影路径
    v.layer.shadowPath = shadowPath.CGPath;
    
    
    
    [self addSubview:v];
    [UIView animateWithDuration:15 animations:^{
        v.y = -10;
        v.width = 0;
        v.height = 0;
    } completion:^(BOOL finished) {

        [v removeFromSuperview];
    }];
}
-(void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event{
    
    
    [UIView animateWithDuration:1.0 animations:^{
        self.y = ChZ_HEIGHT - 50;
        self.height = 0;
        self.width = 0;
        self.x = ChZ_WIDTH - 30;
    } completion:^(BOOL finished) {
        [self removeFromSuperview];
    }];
    
    
    if (self.clickBlock)
    {
        self.clickBlock(self.model);
    }
    
    
    [[NSNotificationCenter defaultCenter] postNotificationName:@"CLICKMINGAREA" object:self.model];
    
//    NSURL *url=[[NSBundle mainBundle]URLForResource:@"mininggetmin.mp3" withExtension:Nil];
//    AVAudioPlayer *audioPlayer=[[AVAudioPlayer alloc]initWithContentsOfURL:url error:Nil];
//    [audioPlayer prepareToPlay];
//    [audioPlayer play];
}
- (void)_loadTimer
{
    if (self.timer == nil)
    {
        self.timer = [NSTimer timerWithTimeInterval:1 target:self selector:@selector(_refreshData) userInfo:nil repeats:YES];
        [[NSRunLoop currentRunLoop]addTimer:self.timer forMode:NSRunLoopCommonModes];
    }
}
- (void)_removeTimer
{
    if (_timer && _timer.valid) {
        [_timer invalidate];
    }
    _timer = nil;
}
- (void)dealloc
{
    [self _removeTimer];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"BEGINSCROLLOW" object:nil];
}
-(int)getRandomNumber:(int)from to:(int)to
{
    return (int)(from + (arc4random() % (to - from + 1)));
}
/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

@end
